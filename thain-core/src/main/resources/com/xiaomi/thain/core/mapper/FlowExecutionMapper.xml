<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019, Xiaomi, Inc.  All rights reserved.
 This source code is licensed under the Apache License Version 2.0, which
 can be found in the LICENSE file in the root directory of this source tree.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.thain.core.mapper.FlowExecutionMapper">

    <insert id="addFlowExecution" parameterType="com.xiaomi.thain.common.model.dp.AddFlowExecutionDp"
            useGeneratedKeys="true" keyProperty="id">
        insert into thain_flow_execution (flow_id, status, host_info, trigger_type,
                                          create_time, update_time, heartbeat)
        values (#{flowId}, #{status}, #{hostInfo}, #{triggerType},
                now(), now(), now())
    </insert>

    <update id="updateLogs">
        update thain_flow_execution
        set logs = #{content}
        where id = #{flowExecutionId}
    </update>

    <update id="updateFlowExecutionStatus">
        update thain_flow_execution
        set status = #{status}
        where id = #{flowExecutionId}
    </update>

    <update id="setFlowExecutionHeartbeat">
        update thain_flow_execution set heartbeat = now()
        where id in (
        <foreach collection="collection" item="id" separator=",">
            #{id}
        </foreach>
        )
    </update>

    <update id="reWaiting">
        update thain_flow_execution set heartbeat = now(), status = 0
        where id in (
        <foreach collection="collection" item="id" separator=",">
            #{id}
        </foreach>
        )
    </update>

    <update id="updateHostInfo">
        update thain_flow_execution
        set host_info = #{hostInfo}
        where id = #{id}
    </update>

    <delete id="clearFlowExecution">
        delete
        from thain_flow_execution
        where update_time &lt; from_unixtime(unix_timestamp(now()) - #{dataReserveDays} * 24 * 60 * 60)
    </delete>

    <delete id="deleteFlowExecutionByIds">
        delete
        from thain_flow_execution
        where id in (
        <foreach collection="collection" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>

    <select id="getFlowExecution" resultType="com.xiaomi.thain.common.model.dr.FlowExecutionDr">
        select id,
               flow_id,
               status,
               host_info,
               trigger_type,
               logs,
               create_time,
               update_time,
               heartbeat
        from thain_flow_execution
        where id = #{flowExecutionId}
    </select>

    <select id="getLatest" resultType="com.xiaomi.thain.common.model.FlowExecutionModel">
        select id,
               flow_id,
               status,
               host_info,
               trigger_type,
               logs,
               create_time,
               update_time
        from thain_flow_execution
        where flow_id = #{flowId}
        order by id desc
        limit #{numbers}
    </select>

    <select id="getNeedDeleteFlowExecutionId" resultType="java.lang.Long">
        select id
        from thain_flow_execution
        where flow_id not in (
        <foreach collection="collection" item="id" separator=",">
            #{id}
        </foreach>
        ) and update_time &lt; from_unixtime(unix_timestamp(now()) - 60 * 60)
    </select>

    <select id="getAllFlowExecutionIds" resultType="java.lang.Long">
        select id
        from thain_flow_execution;
    </select>

    <select id="getDead" resultType="com.xiaomi.thain.common.model.dr.FlowExecutionDr">
        select id,
               flow_id,
               status,
               host_info,
               trigger_type,
               logs,
               create_time,
               update_time,
               heartbeat
        from thain_flow_execution
        where heartbeat &lt; from_unixtime(unix_timestamp(now()) - 60)
          and (status = 0 or status = 1)
    </select>

</mapper>
