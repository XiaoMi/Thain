<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019, Xiaomi, Inc.  All rights reserved.
 This source code is licensed under the Apache License Version 2.0, which
 can be found in the LICENSE file in the root directory of this source tree.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.thain.server.mapper.DashboardMapper">
    <select id="getScheduleStatusCount" resultType="com.xiaomi.thain.server.model.dr.StatusAndCountDr">
        select scheduling_status as `status`,count(1) as `count` from thain_flow
        <if test="filterSource != null and filterSource.length > 0">
            where create_app_id not in
            <foreach collection="filterSource" item="source" open="(" close=")" separator=",">
                #{source}
            </foreach>
        </if>
        group by scheduling_status
    </select>
    <select id="getFlowSourceCount" resultType="com.xiaomi.thain.server.model.dr.SourceAndCountDr">
        select create_app_id as `source`,count(1) as `count` from thain_flow
        <if test="filterScheduleStatus != null and filterScheduleStatus.length > 0">
            where scheduling_status not in
            <foreach collection="filterScheduleStatus" item="status" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </if>
        group by create_app_id
    </select>
    <select id="getFlowExecutionStatusCount" resultType="com.xiaomi.thain.server.model.dr.StatusAndCountDr">
        select `status`,count(1) as `count` from thain_flow_execution
        <where>
            create_time >= from_unixtime(#{period[0]})
            and create_time &lt;= from_unixtime(#{period[1]})
        </where>
        group by `status`
    </select>
    <select id="getJobExecutionStatusCount" resultType="com.xiaomi.thain.server.model.dr.StatusAndCountDr">
        select `status`, count(1) as `count`
        from thain_job_execution
        where create_time >= from_unixtime(#{period[0]})
          and create_time &lt;= from_unixtime(#{period[1]})
        group by `status`
    </select>
    <select id="getRunningFlowCount" resultType="java.lang.Integer">
        select count(1) as `count`
        from thain_flow_execution as tfe
        <if test="(filterSource != null and filterSource.length > 0) or (filterScheduleStatus != null and filterScheduleStatus.length > 0) ">
            inner join thain_flow as tf
            on tf.id = tfe.flow_id
            <if test="filterSource != null and filterSource.length > 0">
                and tf.create_app_id not in
                <foreach collection="filterSource" item="source" open="(" close=")" separator=",">
                    #{source}
                </foreach>
            </if>
            <if test="filterScheduleStatus != null and filterScheduleStatus.length > 0">
                and tf.scheduling_status not in
                <foreach collection="filterScheduleStatus" item="status" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>
        </if>
        where `status` = 1
    </select>
    <select id="getRunningJobCount" resultType="java.lang.Integer">
        select count(1) as `count`
        from thain_job_execution as tje
        <if test="(filterSource != null and filterSource.length > 0) or (filterScheduleStatus != null and filterScheduleStatus.length > 0) ">
            inner join thain_job as tj on tje.job_id = tj.id
            inner join thain_flow as tf
            on tf.id = tj.flow_id
            <if test="filterSource != null and filterSource.length > 0">
                and tf.create_app_id not in
                <foreach collection="filterSource" item="source" open="(" close=")" separator=",">
                    #{source}
                </foreach>
            </if>
            <if test="filterScheduleStatus != null and filterScheduleStatus.length > 0">
                and tf.scheduling_status not in
                <foreach collection="filterScheduleStatus" item="status" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>
        </if>
        where `status` = 2
    </select>
    <select id="getIncreaseFlowCount" resultType="java.lang.Integer">
        select count(1) as `count`
        from thain_flow
        where create_time >= from_unixtime(#{period[0]})
          and create_time &lt;= from_unixtime(#{period[1]})
    </select>
    <select id="getIncreaseJobCount" resultType="java.lang.Integer">
        select count(1) as `count`
        from thain_job
        where create_time >= from_unixtime(#{period[0]})
          and create_time &lt;= from_unixtime(#{period[1]})
    </select>
    <select id="getStatusHistoryCount" resultType="com.xiaomi.thain.server.model.dr.StatusAndCountAndTimeDr">
        select status, count(1) as `count`, unix_timestamp(create_time) as `time`
        from thain_flow_execution
        where create_time >= from_unixtime(#{period[0]})
          and create_time &lt; from_unixtime(#{period[1]})
          and (`status` = 2 or `status` = 3)
        group by `status`, create_time
    </select>

</mapper>